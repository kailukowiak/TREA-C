[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "treac"
version = "0.1.0"
description = "Triple-Encoded Attention for Column-aware time series analysis with robust missing value handling"
readme = "README.md"
requires-python = ">=3.10,<3.13"
dependencies = [
    "torch>=2.0.0",
    "pytorch-lightning>=2.0.0",
    "scikit-learn>=1.3.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "lightning>=2.5.2",
    "tensorboard>=2.19.0",
    "torchvision>=0.22.1",
    "matplotlib>=3.10.3",
    "kagglehub>=0.3.12",
    "neuralforecast>=3.0.0",
    "transformers>=4.53.2",
    "huggingface-hub>=0.33.4",
    "ipykernel>=6.29.5",
    "polars>=1.31.0",
    "torchmetrics>=1.7.4",
    "seaborn>=0.13.2",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["treac*"]

[project.optional-dependencies]
dev = ["pytest>=7.0.0", "ruff>=0.1.0"]

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py313"
extend-include = ["*.ipynb"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint]
select = ["E", "F", "UP", "B", "SIM", "I"]
ignore = [
    "D100",
    "CPY001",
    "N812",
    "T201",
    "FBT001",
    "FBT002",
    "ANN201",
    "D103",
    "E261",
    "RET504",
    "DTZ005",
    "D101",
    "B007",
    "SIM108",
    "SIM102",
    "B008",
]
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.isort]
# Separate imports into sections
known-first-party = ["treac"]
# Force imports to be on separate lines for better readability
force-single-line = false
# Combine star imports
combine-as-imports = true
# Ensure proper section separation
force-wrap-aliases = false
# Split imports on separate lines when needed
split-on-trailing-comma = true
# Add blank line between sections
lines-after-imports = 2
# Control blank lines between import sections
lines-between-types = 1
# Only one blank line after all imports
extra-standard-library = []


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]

[dependency-groups]
dev = ["iniconfig>=2.1.0", "pygments>=2.19.2", "pytest>=8.4.1", "ruff>=0.12.3"]
